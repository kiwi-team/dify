# This is a basic workflow to help you get started with Actions

name: DeployAdmin

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ admin ]
  #pull_request:
    #branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # - name: Set Node.js 18.18.x
    #   uses: actions/setup-node@v4
    #   with:
    #     node-version: 18.18.x

    # - run: npm ci

    # - run: npm run build

    - name: sync files
      # ssh-keygen -m PEM -t rsa -b 4096
      uses: easingthemes/ssh-deploy@main
      env:
        # Private Key
        SSH_PRIVATE_KEY: ${{secrets.ADMIN_KEY}}
        # Remote host
        #REMOTE_HOST: "106.14.36.230"
        REMOTE_HOST: ${{ secrets.ADMIN_HOST }}
        # Remote user
        REMOTE_USER: ${{ secrets.ADMIN_USER }}
        #REMOTE_USER: "www"
        # Remote port$
        REMOTE_PORT: ${{ secrets.ADMIN_PORT }}
        #REMOTE_PORT: 22
        # Source directory
        #ARGS: "-rltgoDzvO --delete"
        SOURCE: "."
        # Target directory
        TARGET: "/data/www/dify"
        EXCLUDE: .git,.devcontainer

    - name: run server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.ADMIN_HOST }}
        username: ${{ secrets.ADMIN_USER }}
        key: ${{ secrets.ADMIN_KEY }}
        port: ${{ secrets.ADMIN_PORT }}
        script: |
          cd /data/www/dify/api
          docker build -t difyapi:v2 .
          docker-compose down
          docker-compose up -d
          docker images | grep none | awk '{print $3}' | xargs docker rmi 
          echo 'y' | docker builder prune